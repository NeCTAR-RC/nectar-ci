- builder:
    name: run-tests
    builders:
      - shell: "./run_tests.sh"

- builder:
    name: rake-lint
    builders:
      - shell: |
          if [ -f Gemfile ]; then
            mkdir .bundled_gems
            export GEM_HOME=`pwd`/.bundled_gems
            bundle install
            bundle exec rake lint 2>&1
          else
            rake lint 2>&1
          fi

- builder:
    name: puppet-lint
    builders:
      - shell: |
          MODULE=$(basename `pwd` | sed 's/puppet-\(.*\)-puppet-unit/\1/')
          if [ -f Modulefile ]; then
            MODULE=$(awk '/^name/ {print $NF}' Modulefile |tr -d \"\')
            if [ -z "$MODULE" ]; then
              echo "Module name not defined in Modulefile"
            fi
          fi

          if [ -n "$MODULE" ]; then
            rm -rf $MODULE
            git clone . $MODULE
            cd "$MODULE"
          fi

          wget https://raw.githubusercontent.com/NeCTAR-RC/flake8-diff/master/lint.py
          chmod +x lint.py

          if [ -f Gemfile ]; then
            mkdir .bundled_gems
            export GEM_HOME=`pwd`/.bundled_gems
            bundle install
            bundle exec ./lint.py rake lint 2>&1
          else
            ./lint.py rake lint 2>&1
          fi

- builder:
    name: puppet-syntax
    builders:
      - shell: |
          MODULE=$(basename `pwd` | sed 's/puppet-\(.*\)-puppet-unit/\1/')
          cd "$MODULE"
          find . -iname *.pp -not -path "./.bundled_gems/*" | xargs puppet parser validate --modulepath=`pwd`/modules
          for f in `find . -iname *.erb -not -path "./.bundled_gems/*"` ; do
            erb -x -T '-' $f | ruby -c
          done

- builder:
    name: puppet-doc
    builders:
      - shell: |
          # Cleanup old docs.
          [ -d doc/ ] && rm -rf doc/
          ## Dummy manifests folder.
          ! [ -d manifests/ ] && mkdir manifests/
          ## Generate docs
          puppet doc --mode rdoc --manifestdir manifests/ --modulepath ./modules/ --outputdir doc
          ## Fix docs to how I want them, I don't like that the complete workspace is included in all file paths.
          if [ -d ${WORKSPACE}/doc/files/${WORKSPACE}/modules ]; then
            mv -v "${WORKSPACE}/doc/files/${WORKSPACE}/modules" "${WORKSPACE}/doc/files/modules"
          fi;
          grep -l -R ${WORKSPACE} * | while read fname; do sed -i "s@${WORKSPACE}/@/@g" $fname; done;

- builder:
    name: 'python-tox-py27'
    builders:
      - shell: 'tox -e py27'

- builder:
    name: 'python-tox-py27-dj16'
    builders:
      - shell: 'tox -e py27-dj16'

- builder:
    name: 'python-tox-flake8'
    builders:
      - shell: |
          wget https://raw.githubusercontent.com/NeCTAR-RC/flake8-diff/master/lint.py
          chmod +x lint.py
          ./lint.py --linter flake8 -- tox -e flake8

- builder:
    name: 'python-tox-jshint'
    builders:
      - shell: 'tox -e jshint'

- builder:
    name: 'pbuilder-create'
    builders:
      - shell: 'hivemind pbuilder.create --os-release {os_release} || hivemind pbuilder.update --os-release {os_release}'

- builder:
    name: 'os-pbuilder-checkout'
    builders:
      - shell: |
          # Set up remote for github or internal, since we have no tags otherwise.
          git remote | grep 'alt-origin' > /dev/null && retval=0 || retval=1
          if [ $retval -ne 0 ]; then

            git remote -v | grep '29418/NeCTAR-RC' > /dev/null && retval=0 || retval=1
            if [ $retval -eq 0 ]; then
              URL=$(git remote -v | grep 29418 | sed 's/.*29418\/\(.*\) .*/\1/' | head -1)
              git remote add alt-origin https://github.com/$URL
            fi

            git remote -v | grep '29418/internal' > /dev/null && retval=0 || retval=1
            if [ $retval -eq 0 ]; then
              URL=$(git remote -v | grep 29418 | sed 's/.*29418\/\(.*\) .*/\1/' | head -1)
              git remote add alt-origin git@git.melbourne.nectar.org.au:$URL
            fi
          fi
          git fetch --tags alt-origin
          if [ ! -d debian ]; then
            for rb in `git branch -r --list | grep alt-origin | grep debian`
            do
              branch=`echo $rb | sed "s,alt-origin/,,g"`;
              git branch $branch alt-origin/$branch;
            done
          fi

          git branch -d $GERRIT_BRANCH || true
          git checkout -b $GERRIT_BRANCH origin/$GERRIT_BRANCH

- builder:
    name: 'pbuilder-buildpackage'
    builders:
      - shell: |
          export DEBFULLNAME="$GIT_AUTHOR_NAME"
          export DEBEMAIL="$GIT_AUTHOR_EMAIL"
          hivemind packaging.buildpackage --os-release {os_release}

- builder:
    name: 'os-pbuilder-create'
    builders:
      - shell: 'hivemind pbuilder.create || hivemind pbuilder.update'

- builder:
    name: 'os-pbuilder-buildpackage'
    builders:
      - shell: |
          export DEBFULLNAME="$GIT_AUTHOR_NAME"
          export DEBEMAIL="$GIT_AUTHOR_EMAIL"
          hivemind packaging.buildpackage

- builder:
    name: 'image-builder'
    builders:
      - shell: |
          DESC="NeCTAR {image_name}"

          [ -d output-{job_name} ] && rm -fr output-{job_name}
          packer build -color=false {job_name}.json
          cd output-{job_name}
          mv {job_name}.qcow2 {job_name}-orig.qcow2
          qemu-img convert -c -o compat=0.10 -O qcow2 {job_name}-orig.qcow2 {job_name}.qcow2
          rm {job_name}-orig.qcow2
          KS_USERNAME=`echo $KEYSTONE_CREDS | cut -f1 -d:`
          KS_PASSWORD=`echo $KEYSTONE_CREDS | cut -f2 -d:`

          export OS_AUTH_URL=https://keystone.rc.nectar.org.au:5000/v2.0/
          export OS_TENANT_ID=28eadf5ad64b42a4929b2fb7df99275c
          export OS_TENANT_NAME=NeCTAR-Images
          export OS_USERNAME="$KS_USERNAME"
          export OS_PASSWORD="$KS_PASSWORD"
          export OS_NO_CACHE=True
          IMAGE_ID=`glance image-create --disk-format qcow2 --container-format bare --name "$DESC" --file "{job_name}.qcow2" --property nectar_build=$BUILD_NUMBER --property nectar_name="{image_name}" | grep " id " |  cut -d '|' -f3`;
          echo "Image ID is $IMAGE_ID"
          RALLY_TENANT=701ec49454e64791b00fdf8a80fd14d8
          glance member-create "$IMAGE_ID" "$RALLY_TENANT"
          wget http://admin.mgmt.melbourne.rc.nectar.org.au/image-building/image-build.yaml
          nova boot --image $IMAGE_ID --flavor m1.small --key-name root-jenkins-rc-nectar-org-au {job_name}

- builder:
    name: yaml-lint
    builders:
      - shell: |
          mkdir -p /tmp/yamls
          export GEM_HOME=/tmp/yamls
          gem install --no-ri --no-rdoc yaml-lint
          find . -type f -iname "*.yaml" -o -iname "*.eyaml" | xargs /tmp/yamls/bin/yaml-lint

- builder:
    name: 'dummy'
    builders:
      - shell: 'exit 0'

- builder:
    name: markdown-lint
    builders:
      - shell: |
          mkdir -p /tmp/vendor
          export GEM_HOME=/tmp/vendor
          cat > /tmp/vendor/md_style.rb << EOF
          all
          exclude_tag :whitespace
          exclude_tag :line_length
          exclude_rule 'MD006' # Lists at beginning of line
          exclude_rule 'MD007' # List indentation
          exclude_rule 'MD033' # Inline HTML
          exclude_rule 'MD034' # Bare URL used
          exclude_rule 'MD040' # Fenced code blocks should have a language specified
          EOF
          gem install mdl
          git diff --name-status HEAD~1 | grep '^[^D].*\.md' | cut -f2- | xargs -I filename /tmp/vendor/bin/mdl -s /tmp/vendor/md_style.rb "filename"

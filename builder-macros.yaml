- builder:
    name: run-tests
    builders:
      - shell: "./run_tests.sh"

- builder:
    name: rake-lint
    builders:
      - shell: |
          if [ -f Gemfile ]; then
            mkdir .bundled_gems
            export GEM_HOME=`pwd`/.bundled_gems
            bundle install
            bundle exec rake lint 2>&1
          else
            rake lint 2>&1
          fi

- builder:
    name: puppet-lint
    builders:
      - shell: |
          wget https://raw.githubusercontent.com/NeCTAR-RC/flake8-diff/master/lint.py
          chmod +x lint.py
          if [ -f Gemfile ]; then
            mkdir .bundled_gems
            export GEM_HOME=`pwd`/.bundled_gems
            bundle install
            bundle exec ./lint.py rake lint 2>&1
          else
            ./lint.py rake lint 2>&1
          fi

- builder:
    name: puppet-syntax
    builders:
      - shell: |
          find . -iname *.pp | xargs puppet parser validate --modulepath=`pwd`/modules
          for f in `find . -iname *.erb` ; do
            erb -x -T '-' $f | ruby -c
          done

- builder:
    name: puppet-doc
    builders:
      - shell: |
          # Cleanup old docs.
          [ -d doc/ ] && rm -rf doc/
          ## Dummy manifests folder.
          ! [ -d manifests/ ] && mkdir manifests/
          ## Generate docs
          puppet doc --mode rdoc --manifestdir manifests/ --modulepath ./modules/ --outputdir doc
          ## Fix docs to how I want them, I don't like that the complete workspace is included in all file paths.
          if [ -d ${WORKSPACE}/doc/files/${WORKSPACE}/modules ]; then
            mv -v "${WORKSPACE}/doc/files/${WORKSPACE}/modules" "${WORKSPACE}/doc/files/modules"
          fi;
          grep -l -R ${WORKSPACE} * | while read fname; do sed -i "s@${WORKSPACE}/@/@g" $fname; done;

- builder:
    name: 'python-tox-py27'
    builders:
      - shell: 'tox -e py27'

- builder:
    name: 'python-tox-flake8'
    builders:
      - shell: |
          wget https://raw.githubusercontent.com/NeCTAR-RC/flake8-diff/master/lint.py
          chmod +x lint.py
          ./lint.py --linter flake8 -- tox -e flake8

- builder:
    name: 'pbuilder-create'
    builders:
      - shell: 'hivemind pbuilder.create'

- builder:
    name: 'pbuilder-buildpackage'
    builders:
      - shell: |
          # Set up remote for github or internal, since we have no tags otherwise.
          git remote | grep 'alt-origin' > /dev/null && retval=0 || retval=1
          if [ $retval -ne 0 ]; then

            git remote -v | grep '29418/NeCTAR-RC' > /dev/null && retval=0 || retval=1
            if [ $retval -eq 0 ]; then
              URL=$(git remote -v | grep 29418 | sed 's/.*29418\/\(.*\) .*/\1/' | head -1)
              git remote add alt-origin https://github.com/$URL
            fi

            git remote -v | grep '29418/internal' > /dev/null && retval=0 || retval=1
            if [ $retval -eq 0 ]; then
              URL=$(git remote -v | grep 29418 | sed 's/.*29418\/\(.*\) .*/\1/' | head -1)
              git remote add alt-origin git@git.melbourne.nectar.org.au:$URL
            fi
          fi
          git fetch --tags alt-origin
          if [ ! -d debian ]; then
            git branch debian alt-origin/debian
          fi
          git branch -d master || true
          git checkout -b master

          export DEBFULLNAME="$GIT_AUTHOR_NAME"
          export DEBEMAIL="$GIT_AUTHOR_EMAIL"

          hivemind packaging.buildpackage

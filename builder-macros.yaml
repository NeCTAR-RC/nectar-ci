- builder:
    name: run-tests
    builders:
      - shell: "./run_tests.sh"

- builder:
    name: rake-lint
    builders:
      - shell: |
          if [ -f Gemfile ]; then
            mkdir -p /tmp/rake-lint
            export GEM_HOME=/tmp/rake-lint
            bundle install
            bundle exec rake lint 2>&1
          else
            rake lint 2>&1
          fi

- builder:
    name: rake-test
    builders:
      - shell: |
          if [ -f Gemfile ]; then
            mkdir -p /tmp/rake-test
            export GEM_HOME=/tmp/rake-test
            bundle install
            bundle exec rake test 2>&1
          else
            rake test 2>&1
          fi


- builder:
    name: librarian-install
    builders:
      - ssh-builder:
          ssh-user-ip: puppet@puppet.mgmt.rc.nectar.org.au:22
          command: /var/lib/puppet/librarian/bin/puppet-librarian-install.sh


- builder:
    name: puppet-lint
    builders:
      - shell: |
          MODULE=$(basename `pwd` | sed 's/puppet-\(.*\)-puppet-unit/\1/')
          if [ -n "$MODULE" ]; then
            rm -rf $MODULE
            git clone . $MODULE
            cd "$MODULE"
          fi

          wget https://raw.githubusercontent.com/NeCTAR-RC/flake8-diff/master/lint.py
          chmod +x lint.py

          if [ -f Gemfile ]; then
            mkdir .bundled_gems
            export GEM_HOME=`pwd`/.bundled_gems
            bundle install
            bundle exec ./lint.py rake lint 2>&1
          else
            ./lint.py rake lint 2>&1
          fi


- builder:
    name: puppet-syntax
    builders:
      - shell: |
          MODULE=$(basename `pwd` | sed 's/puppet-\(.*\)-puppet-unit/\1/')
          cd "$MODULE"
          find . -iname *.pp -not -path "./.bundled_gems/*" -execdir /opt/puppetlabs/bin/puppet parser validate --modulepath=`pwd`/modules {} \;
          find . -iname *.pp -not -path "./.bundled_gems/*" -execdir /opt/puppetlabs/bin/puppet parser validate --modulepath=`pwd`/modules {} +
          for f in `find . -iname *.erb -not -path "./.bundled_gems/*"` ; do
            erb -x -T '-' $f | ruby -c
          done

- builder:
    name: puppet-doc
    builders:
      - shell: |
          # Cleanup old docs.
          [ -d doc/ ] && rm -rf doc/
          ## Dummy manifests folder.
          ! [ -d manifests/ ] && mkdir manifests/
          ## Generate docs
          puppet doc --mode rdoc --manifestdir manifests/ --modulepath ./modules/ --outputdir doc
          ## Fix docs to how I want them, I don't like that the complete workspace is included in all file paths.
          if [ -d ${WORKSPACE}/doc/files/${WORKSPACE}/modules ]; then
            mv -v "${WORKSPACE}/doc/files/${WORKSPACE}/modules" "${WORKSPACE}/doc/files/modules"
          fi;
          grep -l -R ${WORKSPACE} * | while read fname; do sed -i "s@${WORKSPACE}/@/@g" $fname; done;

- builder:
    name: 'python-tox'
    builders:
      - shell: 'export OS_TEST_TIMEOUT=300; tox -e {environment}'

- builder:
    name: 'pbuilder-create'
    builders:
      - shell: 'hivemind pbuilder.create --os-release {os_release} || hivemind pbuilder.update --os-release {os_release}'

- builder:
    name: 'os-pbuilder-checkout'
    builders:
      - shell: |
          # Set up remote for github or internal or uom gitlab, since we have no tags otherwise.
          git remote | grep 'alt-origin' > /dev/null && retval=0 || retval=1
          if [ $retval -ne 0 ]; then

            git remote -v | grep '29418/NeCTAR-RC' > /dev/null && retval=0 || retval=1
            if [ $retval -eq 0 ]; then
              URL=$(git remote -v | grep 29418 | sed 's/.*29418\/\(.*\) .*/\1/' | head -1)
              git remote add alt-origin https://github.com/$URL
            fi

            git remote -v | grep '29418/internal' > /dev/null && retval=0 || retval=1
            if [ $retval -eq 0 ]; then
              URL=$(git remote -v | grep 29418 | sed 's/.*29418\/\(.*\) .*/\1/' | head -1)
              git remote add alt-origin git@git.melbourne.nectar.org.au:$URL
            fi

            git remote -v | grep '29418/resplat-cloud' > /dev/null && retval=0 || retval=1
            if [ $retval -eq 0 ]; then
              URL=$(git remote -v | grep 29418 | sed 's/.*29418\/\(.*\) .*/\1/' | head -1)
              git remote add alt-origin git@gitlab.unimelb.edu.au:$URL
            fi
          fi
          git fetch --tags alt-origin
          if [ ! -d debian ]; then
            for rb in `git branch -r --list | grep alt-origin | grep debian`
            do
              branch=`echo $rb | sed "s,alt-origin/,,g"`;
              git branch $branch alt-origin/$branch;
            done
          fi

          git branch -d $GERRIT_BRANCH || true
          git checkout -b $GERRIT_BRANCH origin/$GERRIT_BRANCH

- builder:
    name: 'pbuilder-buildpackage'
    builders:
      - shell: |
          export DEBFULLNAME="$GIT_AUTHOR_NAME"
          export DEBEMAIL="$GIT_AUTHOR_EMAIL"
          hivemind packaging.buildpackage --os-release {os_release}

- builder:
    name: 'pbuilder-buildpackage-no-upload'
    builders:
      - shell: |
          export DEBFULLNAME="$GIT_AUTHOR_NAME"
          export DEBEMAIL="$GIT_AUTHOR_EMAIL"
          hivemind packaging.buildpackage --os-release {os_release} --no-upload

- builder:
    name: 'os-pbuilder-create'
    builders:
      - shell: 'hivemind pbuilder.create || hivemind pbuilder.update'

- builder:
    name: 'os-pbuilder-buildpackage'
    builders:
      - shell: |
          export DEBFULLNAME="$GIT_AUTHOR_NAME"
          export DEBEMAIL="$GIT_AUTHOR_EMAIL"
          hivemind packaging.buildpackage

- builder:
    name: yaml-lint
    builders:
      - shell: |
          mkdir -p /tmp/yamls
          export GEM_HOME=/tmp/yamls
          gem install --no-ri --no-rdoc yaml-lint
          find . -type f -iname "*.yaml" -o -iname "*.eyaml" | xargs /tmp/yamls/bin/yaml-lint

- builder:
    name: 'dummy'
    builders:
      - shell: 'exit 0'

- builder:
    name: markdown-lint
    builders:
      - shell: |
          mkdir -p /tmp/vendor
          export GEM_HOME=/tmp/vendor
          cat > /tmp/vendor/md_style.rb << EOF
          all
          exclude_tag :whitespace
          exclude_tag :line_length
          exclude_rule 'MD002' # First header should be a h1 header
          exclude_rule 'MD006' # Lists at beginning of line
          exclude_rule 'MD007' # List indentation
          exclude_rule 'MD014' # Dollar signs used before commands without showing output
          exclude_rule 'MD033' # Inline HTML
          exclude_rule 'MD034' # Bare URL used
          exclude_rule 'MD040' # Fenced code blocks should have a language specified
          EOF
          gem install mdl
          git diff --name-status HEAD~1 | grep '^[^D].*\.md' | cut -f2- | xargs -I filename /tmp/vendor/bin/mdl -s /tmp/vendor/md_style.rb "filename"

- builder:
    name: nodejs-test
    builders:
      - shell: |
          npm install
          npm test

- builder:
    name: jekyll-deploy
    builders:
      - shell: |
          mkdir -p /tmp/jekyll-vendor
          export GEM_HOME=/tmp/jekyll-vendor
          bundle install
          bundle exec jekyll build
          GH_USERNAME=`echo $GITHUB_CREDS | cut -f1 -d:`
          GH_PASSWORD=`echo $GITHUB_CREDS | cut -f2 -d:`

          rm -rf /tmp/_site
          mv _site /tmp/
          git remote add github https://$GH_USERNAME:$GH_PASSWORD@github.com/NeCTAR-RC/nectar-training.git
          git symbolic-ref HEAD refs/heads/gh-pages
          rm .git/index
          git clean -fdx
          mv /tmp/_site/* .
          git add --all
          git config --global user.email "jenkins@rc.nectar.org.au"
          git config --global user.name "Jenkins"
          git commit -m "Auto upload"
          git push --force github gh-pages

- builder:
    name: puppet-prod-review
    builders:
      - shell: |
          git config gitreview.username jenkins
          git branch change
          git checkout production
          git cherry-pick change
          git review production

- builder:
    name: jenkins-jobs-test
    builders:
      - shell: |
          git checkout $GERRIT_NEWREV
          jenkins-jobs test .

- builder:
    name: jenkins-jobs-update
    builders:
      - shell: |
          git checkout $GERRIT_NEWREV
          jenkins-jobs update .

- builder:
    name: site-deploy
    builders:
      - ssh-builder:
          ssh-user-ip: puppet@puppet.mgmt.rc.nectar.org.au:22
          command: /usr/local/sbin/deploy-control-repo.sh $GERRIT_PROJECT

- builder:
    name: r10k-deploy
    builders:
      - shell: |
          git remote | grep 'r10k' > /dev/null && retval=0 || retval=1
          if [ $retval -eq 1 ]; then
            git remote add r10k git@git.melbourne.nectar.org.au:r10k/$GERRIT_PROJECT
          fi
          git push r10k HEAD:refs/heads/$GERRIT_PATCHSET_REVISION
      - ssh-builder:
          ssh-user-ip: puppet@r10k.mgmt.rc.nectar.org.au:22
          command: r10k-deploy.sh $GERRIT_PATCHSET_REVISION

- builder:
    name: r10k-cleanup
    builders:
      - shell: |
          git remote | grep 'r10k' > /dev/null && retval=0 || retval=1
          if [ $retval -eq 1 ]; then
            git remote add r10k git@git.melbourne.nectar.org.au:r10k/$GERRIT_PROJECT
          fi
          git push r10k origin/master:refs/heads/master
          git ls-remote | grep "refs/changes/.*/${GERRIT_CHANGE_NUMBER}/" | cut -f1 | xargs -n1 -ICOMMIT git push r10k :COMMIT
      - ssh-builder:
          ssh-user-ip: puppet@r10k.mgmt.rc.nectar.org.au:22
          command: r10k-cleanup.sh $GERRIT_PATCHSET_REVISION

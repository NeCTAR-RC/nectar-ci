- builder:
    name: rake-lint
    builders:
      - shell: |
          if [ -f Gemfile ]; then
            mkdir -p /tmp/rake-lint
            export GEM_HOME=/tmp/rake-lint
            bundle install
            bundle exec rake lint 2>&1
          else
            rake lint 2>&1
          fi

- builder:
    name: rake-test
    builders:
      - shell: |
          if [ -f Gemfile ]; then
            mkdir -p /tmp/rake-test
            export GEM_HOME=/tmp/rake-test
            bundle install
            bundle exec rake test 2>&1
          else
            rake test 2>&1
          fi


- builder:
    name: octocatalog-diff-rake-test
    builders:
      - shell: |
          export PUPPET_VERSION="7.3.0"
          export PUPPET_VERSIONS="7.3.0"
          export RUBOCOP_TEST=false
          export RSPEC_TEST=true
          docker build . --file Dockerfile --tag octocatalog-diff:ruby2.6 --build-arg RUBY_VERSION=2.6-buster
          docker run -e PUPPET_VERSION -e PUPPET_VERSIONS -e RSPEC_TEST -e RUBOCOP_TEST -e ENFORCE_COVERAGE octocatalog-diff:ruby2.6 /app/script/cibuild

- builder:
    name: librarian-install
    builders:
      - ssh-builder:
          ssh-user-ip: puppet@puppet.mgmt.rc.nectar.org.au:22
          command: /var/lib/puppet/librarian/bin/puppet-librarian-install.sh production
      - ssh-builder:
          ssh-user-ip: puppet@puppet.test.rc.nectar.org.au:22
          command: /var/lib/puppet/librarian/bin/puppet-librarian-install.sh testing


- builder:
    name: puppet-lint
    builders:
      - shell: |
          MODULE=$(basename `pwd` | sed 's/puppet-\(.*\)-puppet-unit/\1/')
          if [ -n "$MODULE" ]; then
            rm -rf $MODULE
            git clone . $MODULE
            cd "$MODULE"
          fi

          wget https://raw.githubusercontent.com/NeCTAR-RC/flake8-diff/master/lint.py
          chmod +x lint.py

          if [ -f Gemfile ]; then
            mkdir .bundled_gems
            export GEM_HOME=`pwd`/.bundled_gems
            bundle install
            bundle exec ./lint.py rake lint 2>&1
          else
            ./lint.py rake lint 2>&1
          fi


- builder:
    name: puppet-syntax
    builders:
      - shell: |
          MODULE=$(basename `pwd` | sed 's/puppet-\(.*\)-puppet-unit/\1/')
          cd "$MODULE"
          find . -iname *.pp -not -path "./.bundled_gems/*" -execdir /opt/puppetlabs/bin/puppet parser validate --modulepath=`pwd`/modules {} \;
          find . -iname *.pp -not -path "./.bundled_gems/*" -execdir /opt/puppetlabs/bin/puppet parser validate --modulepath=`pwd`/modules {} +
          for f in `find . -iname *.erb -not -path "./.bundled_gems/*"` ; do
            erb -P -x -T '-' $f | ruby -c
          done

- builder:
    name: puppet-doc
    builders:
      - shell: |
          # Cleanup old docs.
          [ -d doc/ ] && rm -rf doc/
          ## Dummy manifests folder.
          ! [ -d manifests/ ] && mkdir manifests/
          ## Generate docs
          puppet doc --mode rdoc --manifestdir manifests/ --modulepath ./modules/ --outputdir doc
          ## Fix docs to how I want them, I don't like that the complete workspace is included in all file paths.
          if [ -d ${WORKSPACE}/doc/files/${WORKSPACE}/modules ]; then
            mv -v "${WORKSPACE}/doc/files/${WORKSPACE}/modules" "${WORKSPACE}/doc/files/modules"
          fi;
          grep -l -R ${WORKSPACE} * | while read fname; do sed -i "s@${WORKSPACE}/@/@g" $fname; done;

- builder:
    name: 'python-tox'
    builders:
      - shell: 'export OS_TEST_TIMEOUT=300; tox -e {environment}'

- builder:
    name: 'pbuilder-create'
    builders:
      - shell: 'hivemind pbuilder.create --os-release {os_release} || hivemind pbuilder.update --os-release {os_release}'

- builder:
    name: 'os-pbuilder-checkout'
    builders:
      - shell: |
          # Set up remote for github or internal or uom gitlab, since we have no tags otherwise.
          git remote | grep 'alt-origin' > /dev/null && retval=0 || retval=1
          if [ $retval -ne 0 ]; then

            git remote -v | grep '29418/NeCTAR-RC' > /dev/null && retval=0 || retval=1
            if [ $retval -eq 0 ]; then
              URL=$(git remote -v | grep 29418 | sed 's/.*29418\/\(.*\) .*/\1/' | head -1)
              git remote add alt-origin https://github.com/$URL
            fi

            git remote -v | grep '29418/internal' > /dev/null && retval=0 || retval=1
            if [ $retval -eq 0 ]; then
              URL=$(git remote -v | grep 29418 | sed 's/.*29418\/\(.*\) .*/\1/' | head -1)
              git remote add alt-origin git@git.rc.nectar.org.au:$URL
            fi

            git remote -v | grep '29418/resplat-cloud' > /dev/null && retval=0 || retval=1
            if [ $retval -eq 0 ]; then
              URL=$(git remote -v | grep 29418 | sed 's/.*29418\/\(.*\) .*/\1/' | head -1)
              git remote add alt-origin git@gitlab.unimelb.edu.au:$URL
            fi
          fi
          git fetch --tags alt-origin
          if [ ! -d debian ]; then
            for rb in `git branch -r --list | grep alt-origin | grep debian`
            do
              branch=`echo $rb | sed "s,alt-origin/,,g"`;
              git branch $branch alt-origin/$branch;
            done
          fi

          git branch -d $GERRIT_BRANCH || true
          git checkout -b $GERRIT_BRANCH origin/$GERRIT_BRANCH

- builder:
    name: 'pbuilder-buildpackage'
    builders:
      - shell: |
          export DEBFULLNAME="$GIT_AUTHOR_NAME"
          export DEBEMAIL="$GIT_AUTHOR_EMAIL"
          rm -f *.deb
          hivemind packaging.buildpackage --os-release {os_release}
          cp ../../build-area/*/*.deb .

- builder:
    name: 'pbuilder-buildpackage-no-upload'
    builders:
      - shell: |
          export DEBFULLNAME="$GIT_AUTHOR_NAME"
          export DEBEMAIL="$GIT_AUTHOR_EMAIL"
          rm -f *.deb
          hivemind packaging.buildpackage --os-release {os_release} --no-upload
          cp ../../build-area/*/*.deb .

- builder:
    name: 'os-pbuilder-create'
    builders:
      - shell: 'hivemind pbuilder.create || hivemind pbuilder.update'

- builder:
    name: 'os-pbuilder-buildpackage'
    builders:
      - shell: |
          export DEBFULLNAME="$GIT_AUTHOR_NAME"
          export DEBEMAIL="$GIT_AUTHOR_EMAIL"
          rm -f *.deb
          hivemind packaging.buildpackage
          cp ../../build-area/*/*.deb .

# Temp to support bionic-ussuri
- builder:
    name: 'os-pbuilder-create-bionic'
    builders:
      - shell: 'hivemind pbuilder.create --ubuntu-release bionic || hivemind pbuilder.update --ubuntu-release bionic'

# Temp to support bionic-ussuri
- builder:
    name: 'os-pbuilder-buildpackage-bionic'
    builders:
      - shell: |
          export DEBFULLNAME="$GIT_AUTHOR_NAME"
          export DEBEMAIL="$GIT_AUTHOR_EMAIL"
          rm -f *.deb
          hivemind packaging.buildpackage --ubuntu-release bionic
          cp ../../build-area/*/*.deb .


- builder:
    name: yaml-lint
    builders:
      - shell: |
          mkdir -p /tmp/yamls
          export GEM_HOME=/tmp/yamls
          gem install --no-ri --no-rdoc yaml-lint
          find . -type f -iname "*.yml" -o -iname "*.yaml" -o -iname "*.eyaml" | xargs -d '\n' /tmp/yamls/bin/yaml-lint

- builder:
    name: yamllint
    builders:
      - shell: |
          yamllint -d relaxed .

- builder:
    name: 'dummy'
    builders:
      - shell: 'exit 0'

- builder:
    name: helm-lint
    builders:
      - shell: |
         helm lint

- builder:
    name: helm-template
    builders:
      - shell: |
         helm template .

- builder:
    name: helm-dependency-build
    builders:
      - shell: |
         # Add bintami repo as we trust it, see https://github.com/helm/helm/issues/8036 for reasons why this is needed
         helm repo add bitnami https://charts.bitnami.com/bitnami
         helm dependency build

- builder:
    name: helm-package
    builders:
      - shell: |
         rm -rf *.tgz
         helm package .

- builder:
    name: helm-push
    builders:
      - shell: |
         export HELM_EXPERIMENTAL_OCI=1
         export REGISTRY="registry.rc.nectar.org.au"
         echo "$REGISTRY_PSW" | helm registry login -u "$REGISTRY_USR" --password-stdin "$REGISTRY"
         helm push *.tgz oci://registry.rc.nectar.org.au/nectar-helm

- builder:
    name: kustomize-validate
    builders:
      - shell: |
         #!/bin/bash
         kustomizatons=$(find . -name kustomization.yaml -print0 | xargs -0 -n1 dirname | sort --unique)
         for kustomization in ${kustomizatons}; do
           if kustomize build "${kustomization}" -o /tmp/manifest.yaml; then
             echo "validated ${kustomization}"
           else
             echo "validation failed for ${kustomization}"
             exit 1
           fi
         done


- builder:
    name: markdown-lint
    builders:
      - shell: |
          mkdir -p /tmp/vendor
          export GEM_HOME=/tmp/vendor
          cat > /tmp/vendor/md_style.rb << EOF
          all
          exclude_tag :whitespace
          exclude_tag :line_length
          exclude_rule 'MD002' # First header should be a h1 header
          exclude_rule 'MD006' # Lists at beginning of line
          exclude_rule 'MD007' # List indentation
          exclude_rule 'MD014' # Dollar signs used before commands without showing output
          exclude_rule 'MD033' # Inline HTML
          exclude_rule 'MD034' # Bare URL used
          exclude_rule 'MD040' # Fenced code blocks should have a language specified
          EOF
          gem install mdl
          git diff --name-status HEAD~1 | grep '^[^D].*\.md' | cut -f2- | xargs -I filename /tmp/vendor/bin/mdl -s /tmp/vendor/md_style.rb "filename"

- builder:
    name: jekyll-test-build
    builders:
      - shell: |
          export OS_AUTH_URL=https://keystone.rc.nectar.org.au:5000/v3/
          export OS_AUTH_TYPE=v3applicationcredential
          export OS_APPLICATION_CREDENTIAL_ID=$CREDENTIAL_ID
          export OS_APPLICATION_CREDENTIAL_SECRET=$CREDENTIAL_SECRET
          # Force through proxy as a hack fix for making the swift upload and extract work
          export http_proxy=http://wwwproxy.unimelb.edu.au:8000
          export https_proxy=http://wwwproxy.unimelb.edu.au:8000
          CONTAINER="jekyll-test-build-$GERRIT_CHANGE_ID-$GERRIT_PATCHSET_NUMBER"
          openstack container delete --recursive $CONTAINER || true
          AUTH=$(openstack container create $CONTAINER -f value -c account)
          BASEURL=v1/$AUTH/$CONTAINER
          bundle install --path vendor/bundle
          sed -i 's#^    permalink:.*#    permalink: /:collection/:name:output_ext#g' _config.yml  # hack for .html ext in swift
          bundle exec jekyll build --baseurl="/$BASEURL"
          set +x
          OS_TOKEN=$(openstack token issue -c id -f value)
          SWIFTURL=https://swift.rc.nectar.org.au/$BASEURL
          tar -C $WORKSPACE/_site -zcf - . | curl -sSf -X PUT -H "X-Auth-Token: $OS_TOKEN" -H "X-Detect-Content-Type: true" -H "X-Delete-After: 7776000" --data-binary @- $SWIFTURL/?extract-archive=tar.gz
          curl -sSf -X POST -H "X-Auth-Token: $OS_TOKEN" -H 'X-Container-Meta-Web-Index: index.html' $SWIFTURL
          curl -sSf -X POST -H "X-Auth-Token: $OS_TOKEN" -H 'X-Container-Meta-Web-Listings: true' $SWIFTURL
          curl -sSf -X POST -H "X-Auth-Token: $OS_TOKEN" -H 'X-Container-Read: .r:*,.rlistings' $SWIFTURL
          curl -sSf --user $GERRIT_API -X POST -H 'Content-Type: application/json' -d "{'message': 'Test at: $SWIFTURL'}" https://review.rc.nectar.org.au/a/changes/$GERRIT_CHANGE_ID/revisions/$GERRIT_PATCHSET_NUMBER/review

- builder:
    name: jekyll-html-check
    builders:
      - shell: |
          bundle install --path vendor/bundle
          bundle exec jekyll build
          bundle exec htmlproofer \
              --checks-to-ignore LinkCheck \
              --log-level debug ./_site
          bundle exec htmlproofer \
              --checks-to-ignore ScriptCheck,ImageCheck \
              --allow-hash-href --assume_extension \
              --url-ignore '/localhost/' \
              --typhoeus_config '{ "ssl_verifyhost": 0, "ssl_verifypeer": false }' \
              --log-level debug ./_site || true  # allow external link check failures

- builder:
    name: jekyll-test-build-cleanup
    builders:
      - shell: |
          export OS_AUTH_URL=https://keystone.rc.nectar.org.au:5000/v3/
          export OS_AUTH_TYPE=v3applicationcredential
          export OS_APPLICATION_CREDENTIAL_ID=$CREDENTIAL_ID
          export OS_APPLICATION_CREDENTIAL_SECRET=$CREDENTIAL_SECRET
          CONTAINER="jekyll-test-build-$GERRIT_CHANGE_ID-$GERRIT_PATCHSET_NUMBER"
          openstack container delete --recursive $CONTAINER


- builder:
    name: puppet-prod-review
    builders:
      - shell: |
          git config gitreview.username jenkins
          git branch change
          git checkout production
          git cherry-pick change
          git review production

- builder:
    name: jenkins-jobs-test
    builders:
      - shell: |
          git checkout $GERRIT_NEWREV
          jenkins-jobs test .

- builder:
    name: jenkins-jobs-update
    builders:
      - shell: |
          git checkout $GERRIT_NEWREV
          jenkins-jobs update .

- builder:
    name: jenkins-jobs-test-diff
    builders:
      - shell: |
          #!/bin/bash
          echo "Setting up diff:"
          git checkout $GERRIT_NEWREV
          NEW_CONF=$(jenkins-jobs test . 2>&1)
          git fetch
          git reset --hard origin/master
          OLD_CONF=$(jenkins-jobs test . 2>&1)
          echo "diff:"
          diff -U0 --color=always  <(echo "$OLD_CONF") <(echo "$NEW_CONF")
          exit 0

- builder:
    name: site-deploy
    builders:
      - ssh-builder:
          ssh-user-ip: puppet@puppet.mgmt.rc.nectar.org.au:22
          command: /usr/local/sbin/deploy-control-repo.sh $GERRIT_PROJECT

- builder:
    name: r10k-deploy-control-repo
    builders:
      - shell: |
          # strips 'internal/puppet-site-nectar' to 'puppet-site-nectar'
          REPO=`echo $GERRIT_PROJECT | cut -f2 -d'/'`
          # strips 'puppet-site-nectar' to 'nectar'
          PUPPET_ENV=`echo $REPO | cut -f3 -d'-'`
          git remote | grep 'r10k' > /dev/null && retval=0 || retval=1
          if [ $retval -eq 1 ]; then
            git remote add r10k git@git.rc.nectar.org.au:r10k/$REPO
          fi
          git push r10k origin/master:refs/heads/master
          git push r10k origin/master:refs/heads/r10k_diff_catalog_${{PUPPET_ENV}}
          git ls-remote | grep "refs/changes/.*/${{GERRIT_CHANGE_NUMBER}}/[0-9]" | cut -f1 | xargs -n1 -ICOMMIT git push r10k :COMMIT || true
      - ssh-builder:
          ssh-user-ip: puppet@{puppet_host}:22
          command: |
            set -u
            set -e
            set -x
            # strips 'internal/puppet-site-nectar' to 'nectar'
            ENVIRONMENT=`echo $GERRIT_PROJECT | cut -f2 -d'/' | cut -f3 -d'-'`
            r10k -c /etc/puppetlabs/r10k/r10k-$ENVIRONMENT.yaml deploy environment --puppetfile master --verbose --generate-types

- builder:
    name: r10k-deploy
    builders:
      - shell: |
          # strips 'internal/puppet-site-nectar' to 'puppet-site-nectar'
          REPO=`echo $GERRIT_PROJECT | cut -f2 -d'/'`
          # Creates repo to hold r10k branches if it doesn't exist
          respcode=`curl -H "Authorization: token $TOKEN" "https://git.rc.nectar.org.au/api/v1/repos/r10k/${{REPO}}" -w "%{{http_code}}" -o /dev/null -s`
          if [ $respcode = '404' ]; then
            curl -H "Authorization: token $TOKEN" https://git.rc.nectar.org.au/api/v1/org/r10k/repos -X POST -d name=$REPO
          fi
          # Adds r10k remote
          git remote | grep 'r10k' > /dev/null && retval=0 || retval=1
          if [ $retval -eq 1 ]; then
            git remote add r10k git@git.rc.nectar.org.au:r10k/$REPO
          fi
          git push r10k HEAD:refs/heads/$GERRIT_PATCHSET_REVISION
      - ssh-builder:
          ssh-user-ip: puppet@{r10k_host}:22
          command: |
            export R10K_HOST={r10k_host}
            r10k-deploy.sh -e $GERRIT_PATCHSET_REVISION

- builder:
    name: r10k-cleanup
    builders:
      - ssh-builder:
          ssh-user-ip: puppet@{r10k_host}:22
          command: |
            export R10K_HOST={r10k_host}
            # deploy a dummy env (master), which also deletes all environments
            # belonging to deleted branches this returns 1 so || true
            r10k deploy environment --puppetfile master || true

- builder:
    name: r10k-diff-catalog-control-repo
    builders:
      - ssh-builder:
          ssh-user-ip: puppet@{r10k_host}:22
          command: |
            export R10K_HOST={r10k_host}
            r10k-diff-catalog.py test-control-repo $GERRIT_PROJECT $GERRIT_PATCHSET_REVISION

- builder:
    name: r10k-diff-catalog-puppet-library
    builders:
      - ssh-builder:
          ssh-user-ip: puppet@{r10k_host}:22
          command: |
            export R10K_HOST={r10k_host}
            export R10K_BUILD_ENV={r10k_build_env}
            r10k-diff-catalog.py test-puppet-library $GERRIT_REFSPEC

- builder:
    name: tempest-check-whitelist
    builders:
      - shell: |
          #!/bin/bash
          . /opt/tempest/bin/activate
          tmpdir=`mktemp -d --suffix=_tempest`
          cd $WORKSPACE/tempest/
          ./setup_tempest.py -s $AVAILABILITY_ZONE -e $CLOUD -j check-{check} $tmpdir
          cd $tmpdir
          stestr run --whitelist-file $WORKSPACE/tempest/whitelists/check-{whitelist}.yaml --serial 2>&1 | grep --line-buffered -vE ' \w+Warning: |self._sock = None'
          RET=${{PIPESTATUS[0]}}
          rm -rf $tmpdir
          exit $RET

- builder:
    name: tempest-check-whitelist-noparam
    builders:
      - shell: |
          #!/bin/bash
          . /opt/tempest/bin/activate
          tmpdir=`mktemp -d --suffix=_tempest`
          cd $WORKSPACE/tempest/
          ./setup_tempest.py -s {site} -e {cloud} -j check-{check} $tmpdir
          cd $tmpdir
          stestr run --whitelist-file $WORKSPACE/tempest/whitelists/check-{whitelist}.yaml --serial 2>&1 | grep --line-buffered -vE ' \w+Warning: |self._sock = None'
          RET=${{PIPESTATUS[0]}}
          rm -rf $tmpdir
          exit $RET

- builder:
    name: tempest-check-whitelist-site-agnostic
    builders:
      - shell: |
          #!/bin/bash
          . /opt/tempest/bin/activate
          tmpdir=`mktemp -d --suffix=_tempest`
          cd $WORKSPACE/tempest/
          ./setup_tempest.py -e $CLOUD -j check-{check} $tmpdir
          cd $tmpdir
          stestr run --whitelist-file $WORKSPACE/tempest/whitelists/check-{whitelist}.yaml --serial 2>&1 | grep --line-buffered -vE ' \w+Warning: |self._sock = None'
          RET=${{PIPESTATUS[0]}}
          rm -rf $tmpdir
          exit $RET

- builder:
    name: tempest-check-whitelist-site-agnostic-noparam
    builders:
      - shell: |
          #!/bin/bash
          . /opt/tempest/bin/activate
          tmpdir=`mktemp -d --suffix=_tempest`
          cd $WORKSPACE/tempest/
          ./setup_tempest.py -e {cloud} -j check-{check} $tmpdir
          cd $tmpdir
          stestr run --whitelist-file $WORKSPACE/tempest/whitelists/check-{whitelist}.yaml --serial 2>&1 | grep --line-buffered -vE ' \w+Warning: |self._sock = None'
          RET=${{PIPESTATUS[0]}}
          rm -rf $tmpdir
          exit $RET


- builder:
    name: pypi-upload
    builders:
      - shell: |
          #!/bin/bash
          # Set up remote for github or internal or uom gitlab, since we have no tags otherwise.
          git remote | grep 'alt-origin' > /dev/null && retval=0 || retval=1
          if [ $retval -ne 0 ]; then

            git remote -v | grep '29418/NeCTAR-RC' > /dev/null && retval=0 || retval=1
            if [ $retval -eq 0 ]; then
              URL=$(git remote -v | grep 29418 | sed 's/.*29418\/\(.*\) .*/\1/' | head -1)
              git remote add alt-origin git@github.com:$URL
            fi

            git remote -v | grep '29418/internal' > /dev/null && retval=0 || retval=1
            if [ $retval -eq 0 ]; then
              URL=$(git remote -v | grep 29418 | sed 's/.*29418\/\(.*\) .*/\1/' | head -1)
              git remote add alt-origin git@git.rc.nectar.org.au:$URL
            fi

            git remote -v | grep '29418/resplat-cloud' > /dev/null && retval=0 || retval=1
            if [ $retval -eq 0 ]; then
              URL=$(git remote -v | grep 29418 | sed 's/.*29418\/\(.*\) .*/\1/' | head -1)
              git remote add alt-origin git@gitlab.unimelb.edu.au:$URL
            fi
          fi
          git fetch --tags alt-origin
          if [ ! -d debian ]; then
            for rb in `git branch -r --list | grep alt-origin | grep debian`
            do
              branch=`echo $rb | sed "s,alt-origin/,,g"`;
              git branch $branch alt-origin/$branch;
            done
          fi

          git branch -d $GERRIT_BRANCH || true
          git checkout -b $GERRIT_BRANCH origin/$GERRIT_BRANCH

          #get highest tag number
          TAG_VERSION=`git describe --abbrev=0 --tags`
          # Project version
          PROJECT_VERSION=`python3 setup.py --version`
          if [[ "$PROJECT_VERSION" == "$TAG_VERSION" ]]; then
              echo "No change in version"
              exit 0
          fi
          echo "Tagging release to $PROJECT_VERSION"
          #get current hash and see if it already has a tag
          GIT_COMMIT=`git rev-parse HEAD`
          NEEDS_TAG=`git describe --contains $GIT_COMMIT 2>/dev/null`
          #only tag if no tag already
          if [ -z "$NEEDS_TAG" ]; then
              git tag -a $PROJECT_VERSION -m "New auto tagged release ${PROJECT_VERSION}"
              echo "Tagged with $PROJECT_VERSION"
              rm -rf dist/*
              python3 setup.py sdist bdist_wheel
              twine upload --config-file $PYPIRC dist/*
              git push alt-origin --tags
          else
              echo "Already a tag on this commit"
          fi

- project:
    name: centos-stream-9
    jobs:
      - 'image-build-official-{name}'
- project:
    name: rocky-8
    jobs:
      - 'image-build-official-{name}'
- project:
    name: rocky-9
    jobs:
      - 'image-build-official-{name}'
- project:
    name: rocky-10
    jobs:
      - 'image-build-official-{name}'
- project:
    name: almalinux-8
    jobs:
      - 'image-build-official-{name}'
- project:
    name: almalinux-9
    jobs:
      - 'image-build-official-{name}'
- project:
    name: almalinux-10
    jobs:
      - 'image-build-official-{name}'
- project:
    name: debian-11
    jobs:
      - 'image-build-official-{name}'
- project:
    name: debian-12
    jobs:
      - 'image-build-official-{name}'
- project:
    name: debian-13
    jobs:
      - 'image-build-official-{name}'
- project:
    name: fedora-41
    jobs:
      - 'image-build-official-{name}'
- project:
    name: fedora-42
    jobs:
      - 'image-build-official-{name}'
- project:
    name: ubuntu-22.04
    jobs:
      - 'image-build-official-{name}'
- project:
    name: ubuntu-22.04-docker
    jobs:
      - 'image-build-official-{name}'
- project:
    name: ubuntu-22.04-nvidia-vgpu
    jobs:
      - 'image-build-official-{name}'
- project:
    name: ubuntu-24.04
    jobs:
      - 'image-build-official-{name}'
- project:
    name: ubuntu-24.04-nvidia-vgpu
    jobs:
      - 'image-build-official-{name}'
- project:
    name: windows-2022
    jobs:
      - 'image-build-official-{name}':
- project:
    name: mysql-8.0
    jobs:
      - 'image-build-trove-{name}'
- project:
    name: postgresql-16
    jobs:
      - 'image-build-trove-{name}'
- project:
    name: rstudio
    jobs:
      - 'image-build-extra-{name}'
- project:
    name: jupyterlab
    jobs:
      - 'image-build-extra-{name}'
- project:
    name: aiready-base
    jobs:
      - 'image-build-extra-{name}'
- project:
    name: aiready-llms
    jobs:
      - 'image-build-extra-{name}'
- project:
    name: aiready-pytorch
    jobs:
      - 'image-build-extra-{name}'
- project:
    name: aiready-tensorflow
    jobs:
      - 'image-build-extra-{name}'
- project:
    name: aiready-torchvision
    jobs:
      - 'image-build-extra-{name}'
- project:
    name: jenkins-slave-ubuntu-22.04
    jobs:
      - 'image-build-jenkins-{name}':
          image_name: '{name}'
          default_user: 'ubuntu'
- project:
    name: jenkins-slave-ubuntu-24.04
    jobs:
      - 'image-build-jenkins-{name}':
          image_name: '{name}'
          default_user: 'ubuntu'
- project:
    name: undercloud-ubuntu-22.04
    jobs:
      - 'image-build-undercloud-{name}':
          image_name: '{name}'
          default_user: 'root'
- project:
    name: undercloud-ubuntu-24.04
    jobs:
      - 'image-build-undercloud-{name}':
          image_name: '{name}'
          default_user: 'root'
- project:
    name: bumblebee-guacamole
    jobs:
      - 'image-build-bumblebee-{name}':
- project:
    name: bumblebee-ubuntu-22.04
    jobs:
      - 'image-build-bumblebee-{name}':
- project:
    name: bumblebee-ubuntu-24.04
    jobs:
      - 'image-build-bumblebee-{name}':
- project:
    name: bumblebee-scientific-toolbox
    jobs:
      - 'image-build-bumblebee-{name}':
- project:
    name: bumblebee-neurodesktop
    jobs:
      - 'image-build-bumblebee-{name}':
- project:
    name: bumblebee-geodesktop
    jobs:
      - 'image-build-bumblebee-{name}':
- project:
    name: bumblebee-fedora-scientific
    jobs:
      - 'image-build-bumblebee-{name}':
- project:
    name: bumblebee-rocky-9
    jobs:
      - 'image-build-bumblebee-{name}':
- project:
    name: bumblebee-transcription
    jobs:
      - 'image-build-bumblebee-{name}':
- project:
    name: ubuntu-2204
    jobs:
      - 'image-build-capi-{name}'
- project:
    name: ubuntu-2404
    jobs:
      - 'image-build-capi-{name}'
- job-template:
    name: 'image-build-official-{name}'
    defaults: global
    project_name: 'NeCTAR-Images'
    deploy_prod: true
    promote_prod: true
    test_prod_az: ardc-syd-1
    deploy_rctest: true
    test_rctest_az: ardctest-artm
    parameters:
      - string:
          name: project_name
          description: AZ for testing in Production
          default: 'NeCTAR-Images'
      - bool:
          name: deploy_production
          description: Deploy to Production
          default: true
      - bool:
          name: promote_production
          description: Promote image in Production
          default: true
      - string:
          name: az_production
          description: AZ for testing in Production
          default: 'ardc-syd-1'
      - bool:
          name: deploy_testing
          description: Deploy to RCTest
          default: true
      - bool:
          name: promote_testing
          description: Promote image in RCTest
          default: true
      - string:
          name: az_testing
          description: AZ for testing in RCTest
          default: 'ardctest-artm'
    properties:
      - authorization:
          nobody:
            - job-read
            - job-discover
      - build-blocker:
          blocking-jobs:
            - '^image-build-.*'
          block-level: 'GLOBAL'
    project-type: pipeline
    sandbox: true
    dsl: |
      def imageId
      def imageName
      pipeline {{
          agent {{ node {{ label 'noble' }} }}
          options {{ ansiColor('xterm') }}
          stages {{
              stage('Build Image') {{
                  steps {{ imageBuildQEMU '{name}' }}
              }}
              stage('Set Image ID') {{
                  steps {{ setImageID() }}
              }}
              stage('Deploy image in Testing') {{
                  when {{ expression {{ return params.deploy_testing }} }}
                  steps {{
                      retry(count: 3) {{
                          deployImage '{project_name}', 'testing'
                      }}
                  }}
              }}
              stage('Set image properties in Testing') {{
                  when {{ expression {{ return params.deploy_testing }} }}
                  steps {{
                      setImageProperties '{project_name}', 'testing'
                  }}
              }}
              stage('Test image in Testing') {{
                  when {{ expression {{ return params.deploy_testing }} }}
                  steps {{
                      retry(count: 3) {{
                          testOfficialImage '{project_name}', 'testing', params.az_testing
                      }}
                  }}
              }}
              stage('Promote in Testing') {{
                  when {{
                      allOf {{
                          expression {{ return params.deploy_testing }}
                          expression {{ return params.promote_testing }}
                      }}
                  }}
                  steps {{ promoteOfficialImage '{project_name}', 'testing' }}
              }}
              stage('Deploy image in Production') {{
                  when {{ expression {{ return params.deploy_production }} }}
                  steps {{
                      retry(count: 3) {{
                          deployImage '{project_name}', 'production'
                      }}
                  }}
              }}
              stage('Set image properties in Production') {{
                  when {{ expression {{ return params.deploy_production }} }}
                  steps {{
                      setImageProperties '{project_name}', 'production'
                  }}
              }}
              stage('Test image in Production') {{
                  when {{ expression {{ return params.deploy_production }} }}
                  steps {{
                      retry(count: 3) {{
                          testOfficialImage '{project_name}', 'production', params.az_production
                      }}
                  }}
              }}
              stage('Promote in Production') {{
                  when {{
                      allOf {{
                          expression {{ return params.deploy_production }}
                          expression {{ return params.promote_production }}
                      }}
                  }}
                  steps {{ promoteOfficialImage '{project_name}', 'production' }}
              }}
          }}
          post {{
              failure {{
                  node('internal') {{
                      deleteImage '{project_name}', 'testing'
                      deleteImage '{project_name}', 'production'
                  }}
              }}
              cleanup {{
                  node('noble') {{ deleteDir() }}
              }}
          }}
      }}
- job-template:
    name: 'image-build-trove-{name}'
    defaults: global
    properties:
      - authorization:
          nobody:
            - job-read
            - job-discover
      - build-blocker:
          blocking-jobs:
            - '^image-build-.*'
          block-level: 'GLOBAL'
    project-type: pipeline
    sandbox: true
    dsl: |
      def imageId
      def imageName
      pipeline {{
          agent none
          options {{
              ansiColor('xterm')
          }}
          stages {{
              stage('Build Image') {{
                  agent {{ label 'noble' }}
                  steps {{
                      imageBuildQEMU 'trove-{name}'
                  }}
              }}
              stage('Set Image ID') {{
                  agent {{ label 'noble' }}
                  steps {{
                      setImageID()
                  }}
              }}
              stage('Deploy to Dev Cloud') {{
                  agent {{ label 'noble' }}
                  steps {{
                      deployImageWithBuildNumber 'trove', 'development'
                      setImageProperties 'trove', 'development'
                  }}
              }}
              stage('Update dev trove datastore') {{
                  agent {{ label 'internal' }}
                  steps {{
                      updateTroveDatastore 'development'
                  }}
              }}
              stage('Deploy to Test Cloud') {{
                  agent {{ label 'noble' }}
                  steps {{
                      setImageID()
                      deployImageWithBuildNumber 'trove', 'testing'
                      setImageProperties 'trove', 'testing'
                  }}
              }}
              stage('Update test trove datastore') {{
                  agent {{ label 'internal' }}
                  steps {{
                      updateTroveDatastore 'testing'
                  }}
              }}
              stage('Test Image in Test Cloud') {{
                  agent {{ label 'tempest' }}
                  steps {{
                      testTroveImage 'testing', 'ardctest-artm'
                  }}
              }}
              stage('Deploy to Production Cloud') {{
                  agent {{ label 'noble' }}
                  steps {{
                      deployImageWithBuildNumber 'trove', 'production'
                      setImageProperties 'trove', 'production'
                  }}
              }}
              stage('Update production trove datastore') {{
                  agent {{ label 'internal' }}
                  steps {{
                      updateTroveDatastore 'production', '0'
                  }}
              }}
          }}
          post {{
              failure {{
                  node('internal') {{
                      deleteImage 'trove', 'production'
                      troveRevertDatastore 'testing'
                      }}
                  }}
              cleanup {{
                  node('noble') {{
                      deleteDir() /* clean up our workspace */
                  }}
              }}
          }}
      }}
- job-template:
    name: 'image-build-extra-{name}'
    defaults: global
    parameters:
      - string:
          name: project_name
          description: OpenStack project for testing/deployment
          default: 'NeCTAR-Images'
      - bool:
          name: deploy_production
          description: Deploy to Production
          default: true
      - bool:
          name: promote_production
          description: Promote image in Production
          default: true
      - string:
          name: az_production
          description: AZ for testing in Production
          default: 'ardc-syd-1'
      - bool:
          name: deploy_testing
          description: Deploy to RCTest
          default: false
      - bool:
          name: promote_testing
          description: Promote image in RCTest
          default: false
      - string:
          name: az_testing
          description: AZ for testing in RCTest
          default: 'ardctest-artm'
    properties:
      - authorization:
          nobody:
            - job-read
            - job-discover
      - build-blocker:
          blocking-jobs:
            - '^image-build-.*'
          block-level: 'GLOBAL'
    project-type: pipeline
    sandbox: true
    dsl: |
      def imageId
      def imageName
      pipeline {{
          agent {{ node {{ label 'noble' }} }}
          options {{
              ansiColor('xterm')
              timeout(time: 6, unit: 'HOURS')
          }}
          stages {{
              stage('Build Image') {{
                  steps {{ imageBuildOpenStack '{name}', params.project_name }}
              }}
              stage('Set Image ID') {{
                  steps {{ setImageID() }}
              }}

              stage('Deploy image in Testing') {{
                  when {{ expression {{ return params.deploy_testing }} }}
                  steps {{
                      retry(count: 3) {{
                          deployImage params.project_name, 'testing'
                      }}
                  }}
              }}
              stage('Set image properties in Testing') {{
                  when {{ expression {{ return params.deploy_testing }} }}
                  steps {{
                      setImageProperties params.project_name, 'testing'
                  }}
              }}
              stage('Test image in Testing') {{
                  when {{ expression {{ return params.deploy_testing }} }}
                  steps {{
                      retry(count: 3) {{
                          testOfficialImage params.project_name, 'testing', params.az_testing
                      }}
                  }}
              }}
              stage('Promote image in Testing') {{
                  when {{
                      allOf {{
                          expression {{ return params.deploy_testing }}
                          expression {{ return params.promote_testing }}
                      }}
                  }}
                  steps {{ promoteOfficialImage params.project_name, 'testing' }}
              }}
              stage('Deploy image in Production') {{
                  when {{ expression {{ return params.deploy_production }} }}
                  steps {{
                      retry(count: 3) {{
                          deployImage params.project_name, 'production'
                      }}
                  }}
              }}
              stage('Set image properties in Production') {{
                  when {{ expression {{ return params.deploy_production }} }}
                  steps {{
                      setImageProperties params.project_name, 'production'
                  }}
              }}
              stage('Test image in Production') {{
                  when {{ expression {{ return params.deploy_production }} }}
                  steps {{
                      retry(count: 3) {{
                          testOfficialImage params.project_name, 'production', params.az_production
                      }}
                  }}
              }}
              stage('Promote image in Production') {{
                  when {{
                      allOf {{
                          expression {{ return params.deploy_production }}
                          expression {{ return params.promote_production }}
                      }}
                  }}
                  steps {{ promoteOfficialImage params.project_name, 'production' }}
              }}
          }}
          post {{
              cleanup {{
                  node('noble') {{ deleteDir() }}
              }}
          }}
      }}
- job:
    name: image-build-octavia-amphora
    defaults: global
    properties:
      - authorization:
          nobody:
            - job-read
            - job-discover
      - build-blocker:
          blocking-jobs:
            - '^image-build-.*'
          block-level: 'GLOBAL'
    project-type: pipeline
    sandbox: true
    dsl: |
      def imageId
      def imageName
      pipeline {
          agent none
          options {
              ansiColor('xterm')
          }
          stages {
              stage('Build Image') {
                  agent { label 'noble' }
                  steps {
                      imageBuildQEMU 'octavia-amphora'
                  }
              }
              stage('Set Image ID') {
                  agent { label 'noble' }
                  steps {
                      setImageID()
                  }
              }
              stage('Deploy to Dev Cloud') {
                  agent { label 'noble' }
                  steps {
                      deployImage 'octavia', 'development'
                      setImageProperties 'octavia', 'development'
                      setImageTag 'octavia', 'octavia', 'development'
                      setImageTag 'octavia', 'octavia_next', 'development'
                  }
              }
              stage('Deploy to Test Cloud') {
                  agent { label 'noble' }
                  steps {
                      deployImage 'octavia', 'testing'
                      setImageProperties 'octavia', 'testing'
                      setImageTag 'octavia', 'octavia', 'testing'
                      setImageTag 'octavia', 'octavia_next', 'testing'
                  }
              }
              stage('Test Image in Test Cloud') {
                  agent { label 'tempest' }
                  steps {
                      testOctaviaImage 'testing', 'ardctest-artm'
                  }
              }
              stage('Deploy to Production Cloud') {
                  agent { label 'noble' }
                  steps {
                      deployImage 'octavia', 'production'
                      setImageProperties 'octavia', 'production'
                      setImageTag 'octavia', 'octavia', 'production'
                      setImageTag 'octavia', 'octavia_next', 'production'
                  }
              }
              stage('Test Image in Prod Cloud') {
                  agent { label 'tempest' }
                  steps {
                      testOctaviaImage 'production', 'ardc-syd-1'
                  }
              }
          }
          post {
              failure {
                  node('noble') {
                      script {
                        try {
                          unsetImageTag 'octavia', 'octavia', 'development'
                        } catch (err) {
                          echo "Failed: ${err}"
                        }
                        try {
                          unsetImageTag 'octavia', 'octavia', 'testing'
                        } catch (err) {
                          echo "Failed: ${err}"
                        }
                        try {
                          unsetImageTag 'octavia', 'octavia', 'production'
                        } catch (err) {
                          echo "Failed: ${err}"
                        }
                      }
                    }
                  }
              cleanup {
                  node('noble') {
                      deleteDir() /* clean up our workspace */
                  }
              }
          }
      }
- job:
    name: image-build-manila-share-server
    defaults: global
    properties:
      - authorization:
          nobody:
            - job-read
            - job-discover
      - build-blocker:
          blocking-jobs:
            - '^image-build-.*'
          block-level: 'GLOBAL'
    project-type: pipeline
    sandbox: true
    dsl: |
      def imageId
      def imageName
      pipeline {
          agent none
          options {
              ansiColor('xterm')
          }
          stages {
              stage('Build Image') {
                  agent { label 'noble' }
                  steps {
                      imageBuildQEMU 'manila-ubuntu'
                  }
              }
              stage('Set Image ID') {
                  agent { label 'noble' }
                  steps {
                      setImageID()
                  }
              }
              stage('Deploy to Dev Cloud') {
                  agent { label 'noble' }
                  steps {
                      deployImage 'manila', 'development'
                      setImageProperties 'manila', 'development'
                      setImageTag 'manila', 'manila', 'development'
                  }
              }
              stage('Deploy to Test Cloud') {
                  agent { label 'noble' }
                  steps {
                      deployImage 'manila', 'testing'
                      setImageProperties 'manila', 'testing'
                      setImageTag 'manila', 'manila', 'testing'
                  }
              }
              stage('Test Image in Test Cloud') {
                  agent { label 'tempest' }
                  steps {
                      testManilaImage 'testing', 'ardctest-artm'
                  }
              }
              stage('Deploy to Production Cloud') {
                  agent { label 'noble' }
                  steps {
                      deployImage 'manila', 'production'
                      setImageProperties 'manila', 'production'
                      setImageTag 'manila', 'manila', 'production'
                  }
              }
              stage('Test Image in Prod Cloud') {
                  agent { label 'tempest' }
                  steps {
                      testManilaImage 'production', 'ardc-syd-1'
                  }
              }
          }
          post {
              failure {
                  node('noble') {
                      deleteImage 'manila', 'production'
                      deleteImage 'manila', 'testing'
                      deleteImage 'manila', 'development'
                      }
                  }
              cleanup {
                  node('noble') {
                      deleteDir() /* clean up our workspace */
                  }
              }
          }
      }
- job-template:
    name: 'image-build-jenkins-{name}'
    defaults: global
    node: noble
    project_name: 'nectar-ci'
    parameters:
      - string:
          name: project_name
          description: OpenStack project for testing/deployment
          default: 'nectar-ci'
    properties:
      - authorization:
          nobody:
            - job-read
            - job-discover
      - build-blocker:
          blocking-jobs:
            - '^image-build-.*'
          block-level: 'GLOBAL'
    project-type: pipeline
    sandbox: true
    dsl: |
      def imageId
      def imageName
      pipeline {{
          agent {{ node {{ label 'noble' }} }}
          options {{ ansiColor('xterm') }}
          stages {{
              stage('Build Image') {{
                  steps {{ imageBuildQEMU '{name}' }}
              }}
              stage('Set Image ID') {{
                  steps {{ setImageID() }}
              }}
              stage('Deploy in testing') {{
                  steps {{
                      deployImageWithBuildNumber '{project_name}', 'testing'
                  }}
              }}
          }}
          post {{
              failure {{
                  node('internal') {{
                      deleteImage '{project_name}', 'testing'
                  }}
              }}
              cleanup {{
                  node('noble') {{ deleteDir() }}
              }}
          }}
      }}
- job-template:
    name: 'image-build-capi-{name}'
    defaults: global
    project_name: 'NeCTAR-Images'
    kubernetes_version: '1.29.3'
    parameters:
      - string:
          name: project_name
          description: Project name to deploy images to
          default: 'NeCTAR-Images'
      - string:
          name: kubernetes_version
          description: Kubernetes version to build for (e.g. 1.29.3)
          default: '1.29.3'
    properties:
      - authorization:
          nobody:
            - job-read
            - job-discover
      - build-blocker:
          blocking-jobs:
            - '^image-build-.*'
          block-level: 'GLOBAL'
    project-type: pipeline
    sandbox: true
    dsl: |
      def imageId
      def imageName
      pipeline {{
          agent {{ node {{ label 'noble' }} }}
          options {{ ansiColor('xterm') }}
          stages {{
              stage('Build Image') {{
                  steps {{ imageBuildCAPI '{name}', kubernetes_version }}
              }}
              stage('Set Image ID') {{
                  steps {{ setImageID() }}
              }}
              stage('Deploy in development') {{
                  steps {{
                      deployImage '{project_name}', 'development'
                      setImageProperties '{project_name}', 'development'
                      setImageVisibility '{project_name}', 'development', 'community'
                  }}
              }}

              stage('Deploy in testing') {{
                  steps {{
                      deployImage '{project_name}', 'testing'
                      setImageProperties '{project_name}', 'testing'
                      setImageVisibility '{project_name}', 'testing', 'community'
                  }}
              }}
              stage('Deploy in production') {{
                  steps {{
                      deployImage '{project_name}', 'production'
                      setImageProperties '{project_name}', 'production'
                      setImageVisibility '{project_name}', 'production', 'community'
                  }}
              }}
          }}
          post {{
              failure {{
                  node('internal') {{
                      deleteImage '{project_name}', 'testing'
                      deleteImage '{project_name}', 'production'
                  }}
              }}
              cleanup {{
                  node('noble') {{ deleteDir() }}
              }}
          }}
      }}
- job-template:
    name: 'image-build-undercloud-{name}'
    defaults: global
    node: noble
    properties:
      - authorization:
          nobody:
            - job-read
            - job-discover
      - build-blocker:
          blocking-jobs:
            - '^image-build-.*'
          block-level: 'GLOBAL'
    project-type: pipeline
    sandbox: true
    dsl: |
      def imageId
      def imageName
      pipeline {{
          agent {{ node {{ label 'noble' }} }}
          options {{ ansiColor('xterm') }}
          stages {{
              stage('Build Image') {{
                  steps {{ imageBuildQEMU '{name}' }}
              }}
              stage('Set Image ID') {{
                  steps {{ setImageID() }}
              }}
              stage('Deploy in NeCTAR-Devs') {{
                  steps {{
                      deployImageWithBuildNumber 'NeCTAR-Devs', 'production'
                  }}
              }}
          }}
          post {{
              failure {{
                  node('internal') {{
                      deleteImage 'NeCTAR-Devs', 'production'
                  }}
              }}
              cleanup {{
                  node('noble') {{ deleteDir() }}
              }}
          }}
      }}
- job-template:
    name: 'image-build-bumblebee-{name}'
    defaults: global
    project_name: 'bumblebee'
    parameters:
      - string:
          name: project_name
          description: OpenStack project for deployment
          default: 'bumblebee'
      - bool:
          name: deploy_production
          description: Deploy to Production
          default: true
      - string:
          name: az_production
          description: AZ for testing in Production
          default: 'ardc-syd-1'
      - bool:
          name: deploy_testing
          description: Deploy to RCTest
          default: true
      - string:
          name: az_testing
          description: AZ for testing in RCTest
          default: 'ardctest-artm'
      - bool:
          name: deploy_volumes
          description: Deploy the volumes for the image
          default: true
      - string:
          name: volume_azs_production
          description: Deploy the volumes for the image
          default: 'ardc-syd-1,melbourne-qh2,QRIScloud,monash-02,auckland'
      - string:
          name: volume_azs_testing
          description: Deploy the volumes for the image
          default: 'ardctest-artm'
    properties:
      - authorization:
          nobody:
            - job-read
            - job-discover
      - build-blocker:
          blocking-jobs:
            - '^image-build-.*'
          block-level: 'GLOBAL'
    project-type: pipeline
    sandbox: true
    dsl: |
      def imageId
      def imageName
      pipeline {{
          agent {{ node {{ label 'noble' }} }}
          options {{ ansiColor('xterm') }}
          stages {{
              stage('Build Image') {{
                  steps {{ imageBuildOpenStack '{name}', '{project_name}' }}
              }}
              stage('Set Image ID') {{
                  steps {{ setImageID() }}
              }}
              stage('Deploy image in Testing') {{
                  when {{ expression {{ return params.deploy_testing }} }}
                  steps {{
                      retry(count: 3) {{
                          deployImageWithBuildNumber '{project_name}', 'testing'
                      }}
                  }}
              }}
              stage('Set image properties in Testing') {{
                  when {{ expression {{ return params.deploy_testing }} }}
                  steps {{
                      setImageProperties '{project_name}', 'testing'
                  }}
              }}
              stage('Test image in Testing') {{
                  when {{ expression {{ return params.deploy_testing }} }}
                  steps {{
                      retry(count: 3) {{
                          testOfficialImage '{project_name}', 'testing', params.az_testing
                      }}
                  }}
              }}
              stage('Deploy volumes to Testing') {{
                  when {{
                      allOf {{
                          expression {{ return params.deploy_testing }}
                          expression {{ return params.deploy_volumes }}
                      }}
                  }}
                  steps {{ deployBumblebeeVolumes '{project_name}', 'testing', params.volume_azs_testing }}
              }}
              stage('Promote in Testing') {{
                  when {{
                      allOf {{
                          expression {{ return params.deploy_testing }}
                          expression {{ return params.promote_testing }}
                      }}
                  }}
                  steps {{ promoteOfficialImage '{project_name}', 'testing' }}
              }}
              stage('Deploy image in Production') {{
                  when {{ expression {{ return params.deploy_production }} }}
                  steps {{
                      retry(count: 3) {{
                          deployImageWithBuildNumber '{project_name}', 'production'
                      }}
                  }}
              }}
              stage('Set image properties in Production') {{
                  when {{ expression {{ return params.deploy_production }} }}
                  steps {{
                      setImageProperties '{project_name}', 'production'
                  }}
              }}
              stage('Test image in Production') {{
                  when {{ expression {{ return params.deploy_production }} }}
                  steps {{
                      retry(count: 3) {{
                          testOfficialImage '{project_name}', 'production', params.az_production
                      }}
                  }}
              }}
              stage('Deploy volumes to Production') {{
                  when {{
                      allOf {{
                          expression {{ return params.deploy_production }}
                          expression {{ return params.deploy_volumes }}
                      }}
                  }}
                  steps {{ deployBumblebeeVolumes '{project_name}', 'production', params.volume_azs_production }}
              }}
          }}
          post {{
              cleanup {{
                  node('noble') {{ deleteDir() }}
              }}
          }}
      }}

- project:
    name: stormbee-lifecycle-check
    desktop:
      - ubuntu
      - jammy
      - rocky9
      - win2022
    zone:
      - ardc-syd-1
      - melbourne-qh2
      - monash-02
      - QRIScloud
      - auckland
      - coreservices
    exclude:
      - desktop: win2022
        zone: ardc-syd-1
      - desktop: win2022
        zone: melbourne-qh2
      - desktop: win2022
        zone: monash-02
      - desktop: win2022
        zone: auckland
    jobs:
      - stormbee-lifecycle-check-{zone}-{desktop}
- job-template:
    name: 'stormbee-lifecycle-check-{zone}-{desktop}'
    defaults: global
    concurrent: false
    node: stormbee
    project-type: pipeline
    sandbox: true
    properties:
      - build-blocker:
          blocking-jobs:
            - '^stormbee-lifecycle-check-.*'
          block-level: 'GLOBAL'
    triggers:
      - timed: 'H H(0-6) * * *'
    wrappers:
      - timeout:
          timeout: 30
          fail: true
    dsl: |
      pipeline {{
        agent {{ label 'stormbee' }}
        stages {{
          stage('Prepare') {{
            steps {{
              git poll: false,
                  url: 'ssh://jenkins@review.rc.nectar.org.au:29418/NeCTAR-RC/bumblebee-stormbee.git',
                  credentialsId: 'cd8b8dd3-b897-4ecb-985d-180d5b6f8498',
                  branch: 'master'
              sh '''
                echo Installing stormbee into a virtual env
                rm -rf ./venv-stormbee
                virtualenv -p python3 ./venv-stormbee
                . ./venv-stormbee/bin/activate
                pip install -e .
              '''
            }}
          }}
          stage('Run') {{
            steps {{
              withCredentials([file(credentialsId: 'jenkins-stormbee-ini', variable: 'CONFIG')]) {{
                  sh '''
                  export PYTHONUNBUFFERED=1
                  . ./venv-stormbee/bin/activate
                  if [[ "{zone}" == "coreservices" ]]; then
                      SITE=testing
                  else
                      SITE=production
                  fi
                  xvfb-run stormbee -c $CONFIG -p --site $SITE clear
                  xvfb-run stormbee -c $CONFIG -p --nagios --site $SITE --zone {zone} --desktop {desktop} scenario lifecycle
                  '''
              }}
            }}
          }}
        }}
      }}
